{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leticia\\\\Documents\\\\13_hexaware\\\\inicio_hexaware\\\\training_react\\\\react\\\\food_app\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-db53a-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.MealsError,\n        children: \"Failed to fetch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id // this is new!\n    ,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: mealList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useState","useEffect","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","MealsLoading","MealsError","mealList","map","meal"],"sources":["C:/Users/Leticia/Documents/13_hexaware/inicio_hexaware/training_react/react/food_app/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\nimport classes from './AvailableMeals.module.css';\r\n\r\n\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchMeals = async () => { \r\n    const response = await fetch('https://react-http-db53a-default-rtdb.firebaseio.com/meals.json');\r\n\r\n    if(!response.ok) {\r\n      throw new Error('Something went wrong!');\r\n    }\r\n\r\n    const responseData = await response.json();\r\n\r\n    const loadedMeals = [];\r\n\r\n    for(const key in responseData) {\r\n      loadedMeals.push({\r\n        id: key,\r\n        name: responseData[key].name,\r\n        description: responseData[key].description,\r\n        price: responseData[key].price\r\n      });\r\n    }\r\n    \r\n    setMeals(loadedMeals);\r\n    setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals().catch(error => {\r\n      setIsLoading(false)\r\n      setHttpError(error.message);\r\n    });\r\n    \r\n  }, []);\r\n\r\n  if(isLoading) {\r\n    return (\r\n    <section className={classes.MealsLoading} >\r\n      <p>Loading...</p>\r\n    </section>);\r\n  }\r\n\r\n  if(httpError) {\r\n    return(\r\n      <section>\r\n        <p className={classes.MealsError} >Failed to fetch</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n    const mealList = meals.map(meal => (\r\n    <MealItem \r\n    id={meal.id} // this is new!\r\n    key={meal.id} \r\n    name={meal.name} \r\n    description={meal.description}\r\n    price={meal.price}\r\n    />));\r\n    return (\r\n        <section className={classes.meals} >\r\n            <Card>\r\n                {mealList}\r\n            </Card>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default AvailableMeals;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAIA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,YAAY;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;;MAEA,IAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;QACf,MAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;MACD;;MAED,MAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;MAEA,MAAMC,WAAW,GAAG,EAApB;;MAEA,KAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA+B;QAC7BE,WAAW,CAACE,IAAZ,CAAiB;UACfC,EAAE,EAAEF,GADW;UAEfG,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;UAGfC,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;UAIfC,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;QAJV,CAAjB;MAMD;;MAEDlB,QAAQ,CAACY,WAAD,CAAR;MACAV,YAAY,CAAC,KAAD,CAAZ;IACC,CAtBD;;IAwBAG,UAAU,GAAGc,KAAb,CAAmBC,KAAK,IAAI;MAC1BlB,YAAY,CAAC,KAAD,CAAZ;MACAE,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;IACD,CAHD;EAKD,CA9BQ,EA8BN,EA9BM,CAAT;;EAgCA,IAAGpB,SAAH,EAAc;IACZ,oBACA;MAAS,SAAS,EAAEJ,OAAO,CAACyB,YAA5B;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADA;EAID;;EAED,IAAGnB,SAAH,EAAc;IACZ,oBACE;MAAA,uBACE;QAAG,SAAS,EAAEN,OAAO,CAAC0B,UAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAEC,MAAMC,QAAQ,GAAGzB,KAAK,CAAC0B,GAAN,CAAUC,IAAI,iBAC/B,QAAC,QAAD;IACA,EAAE,EAAEA,IAAI,CAACX,EADT,CACa;IADb;IAGA,IAAI,EAAEW,IAAI,CAACV,IAHX;IAIA,WAAW,EAAEU,IAAI,CAACT,WAJlB;IAKA,KAAK,EAAES,IAAI,CAACR;EALZ,GAEKQ,IAAI,CAACX,EAFV;IAAA;IAAA;IAAA;EAAA,QADiB,CAAjB;EAQA,oBACI;IAAS,SAAS,EAAElB,OAAO,CAACE,KAA5B;IAAA,uBACI,QAAC,IAAD;MAAA,UACKyB;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAnED;;GAAM1B,c;;KAAAA,c;AAqEN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}